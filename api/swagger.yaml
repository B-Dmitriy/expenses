basePath: /
definitions:
  model.Category:
    properties:
      createdAt:
        type: string
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      updatedAt:
        type: string
      userID:
        type: integer
    type: object
  model.CreateCategoryBody:
    properties:
      description:
        type: string
      name:
        type: string
      userID:
        type: integer
    type: object
  model.CreateUserBody:
    properties:
      email:
        type: string
      login:
        maxLength: 255
        minLength: 2
        type: string
      password:
        maxLength: 20
        minLength: 4
        type: string
    required:
    - email
    - login
    - password
    type: object
  model.EditCategoryBody:
    properties:
      description:
        type: string
      name:
        type: string
    type: object
  model.EditUserBody:
    properties:
      email:
        type: string
      login:
        maxLength: 255
        minLength: 2
        type: string
    required:
    - email
    - login
    type: object
  model.LoginCredentials:
    properties:
      email:
        type: string
      password:
        maxLength: 20
        minLength: 4
        type: string
    required:
    - email
    - password
    type: object
  model.LoginResponse:
    properties:
      accessToken:
        type: string
      login:
        type: string
      refreshToken:
        type: string
      userID:
        type: integer
      userRoleID:
        type: integer
    type: object
  model.RegistrationData:
    properties:
      email:
        type: string
      login:
        maxLength: 255
        minLength: 2
        type: string
      password:
        maxLength: 20
        minLength: 4
        type: string
    required:
    - email
    - login
    - password
    type: object
  model.UserInfo:
    properties:
      createdAt:
        type: string
      email:
        type: string
      emailConfirmed:
        type: boolean
      id:
        type: integer
      login:
        type: string
      roleID:
        type: integer
      updatedAt:
        type: string
    type: object
  tokens.Tokens:
    properties:
      acceptToken:
        type: string
      refreshToken:
        type: string
    type: object
  web.WebError:
    properties:
      code:
        type: integer
      message:
        type: string
    type: object
host: 0.0.0.0:7070
info:
  contact:
    email: example@mail.com
    name: API Support
  description: This is server Expenses application.
  license:
    name: MIT
    url: https://opensource.org/license/mit
  title: Swagger Expenses API
  version: "1.0"
paths:
  /api/v1/categories:
    get:
      description: Получить список категорий (свои и общие)
      parameters:
      - default: 1
        description: positive int
        in: query
        maximum: 10
        minimum: 1
        name: page
        type: integer
      - default: 25
        description: positive int
        in: query
        maximum: 100
        minimum: 1
        name: limit
        type: integer
      - description: any string
        in: query
        maxLength: 256
        name: search
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Category'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.WebError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/web.WebError'
      security:
      - BearerAuth: []
      tags:
      - Categories
    post:
      description: Создать категорию для пользователя
      parameters:
      - description: query params
        in: body
        name: request
        schema:
          $ref: '#/definitions/model.CreateCategoryBody'
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.WebError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/web.WebError'
      security:
      - BearerAuth: []
      tags:
      - Categories
  /api/v1/categories/{id}:
    delete:
      description: Удалить пользователя (Пользователь - только себя, Админ - любого)
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: No Content
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/web.WebError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/web.WebError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/web.WebError'
      security:
      - BearerAuth: []
      tags:
      - Categories
    get:
      description: Получить список категорий (свои и общие)
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: integer
      - default: 1
        description: positive int
        in: query
        maximum: 10
        minimum: 1
        name: page
        type: integer
      - default: 25
        description: positive int
        in: query
        maximum: 100
        minimum: 1
        name: limit
        type: integer
      - description: any string
        in: query
        maxLength: 256
        name: search
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Category'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.WebError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/web.WebError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/web.WebError'
      security:
      - BearerAuth: []
      tags:
      - Categories
    put:
      description: Изменить информацию о категории пользователя
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: integer
      - description: query params
        in: body
        name: request
        schema:
          $ref: '#/definitions/model.EditCategoryBody'
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.WebError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/web.WebError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/web.WebError'
      security:
      - BearerAuth: []
      tags:
      - Categories
  /api/v1/login:
    post:
      description: Вход под учётной записью
      parameters:
      - description: query params
        in: body
        name: request
        schema:
          $ref: '#/definitions/model.LoginCredentials'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.LoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.WebError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/web.WebError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/web.WebError'
      tags:
      - Authentication
  /api/v1/logout:
    post:
      description: Выход из учётной записи
      responses:
        "204":
          description: No Content
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/web.WebError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/web.WebError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/web.WebError'
      security:
      - BearerAuth: []
      tags:
      - Authentication
  /api/v1/refresh:
    post:
      description: Перегенерировать токен пользователя
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/tokens.Tokens'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.WebError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/web.WebError'
      security:
      - BearerAuth: []
      tags:
      - Authentication
  /api/v1/registration:
    post:
      description: Регистрация пользователя
      parameters:
      - description: query params
        in: body
        name: request
        schema:
          $ref: '#/definitions/model.RegistrationData'
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.WebError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/web.WebError'
      tags:
      - Authentication
  /api/v1/users:
    get:
      description: Получить список пользователей (только для админа)
      parameters:
      - default: 1
        description: positive int
        in: query
        maximum: 10
        minimum: 1
        name: page
        type: integer
      - default: 25
        description: positive int
        in: query
        maximum: 100
        minimum: 1
        name: limit
        type: integer
      - description: any string
        in: query
        maxLength: 256
        name: search
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.UserInfo'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.WebError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/web.WebError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/web.WebError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/web.WebError'
      security:
      - BearerAuth: []
      tags:
      - Users
    post:
      description: Создать пользователя вручную. (Только админ)
      parameters:
      - description: query params
        in: body
        name: request
        schema:
          $ref: '#/definitions/model.CreateUserBody'
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.WebError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/web.WebError'
      security:
      - BearerAuth: []
      tags:
      - Users
  /api/v1/users/{id}:
    delete:
      description: Удалить пользователя (Пользователь - только себя, Админ - любого)
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: No Content
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/web.WebError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/web.WebError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/web.WebError'
      security:
      - BearerAuth: []
      tags:
      - Users
    get:
      description: Получить информацию о пользователе (Пользователь - о семе, Админ
        о любом)
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.UserInfo'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.WebError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/web.WebError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/web.WebError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/web.WebError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/web.WebError'
      security:
      - BearerAuth: []
      tags:
      - Users
    put:
      description: Изменить информацию о пользователе (Пользователь - о семе, Админ
        о любом)
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: query params
        in: body
        name: request
        schema:
          $ref: '#/definitions/model.EditUserBody'
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.WebError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/web.WebError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/web.WebError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/web.WebError'
      security:
      - BearerAuth: []
      tags:
      - Users
schemes:
- http
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
